PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX : <http://www.stups.fr/ontologies/2023/stups/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

# R1 : Vérification des logos.
SELECT ?match
WHERE
{
    ?s1 a :Echantillon .
    ?s2 a :Echantillon .
    ?s1 :id \"%s\" .
    ?s2 :id \"%s\" .
    ?s1 :logo ?logo1 .
    ?s2 :logo ?logo2 .
    ?s1 :nomLogo ?logoName1 .
    ?s2 :nomLogo ?logoName2 .
    BIND((?logo1 = ?logo2 && ?logoName1 = ?logoName2) as ?match)
}

# R2 : Vérification des formes chimiques.
SELECT ?match
WHERE
{
    ?s1 a :Echantillon .
    ?s2 a :Echantillon .
    ?s1 :id \"%s\" .
    ?s2 :id \"%s\" .
    ?s1 :aPrincipeActif ?ap1 .
    ?s2 :aPrincipeActif ?ap2 .
    ?ap1 :aFormeChimique ?f1 .
    ?ap2 :aFormeChimique ?f2 .
    BIND ((?f1 = ?f2) as ?match)
}

# R3 : Vérification des dates.
SELECT ?match
WHERE
{
    ?s1 a :Echantillon .
    ?s2 a :Echantillon .
    ?s1 :id \"%s\" .
    ?s2 :id \"%s\" .

    ?s1 :provientDe ?se1 .
    ?se1 :estDansSaisine ?sa1 .
    ?sa1 :date ?d1 .
    
    ?s2 :provientDe ?se2 .
    ?se2 :estDansSaisine ?sa2 .
    ?sa2 :date ?d2 .
    bind ((?d1 - ?d2) as ?diff) .
    bind (if(?diff < "P0Y0M0DT0H0M20.000S"^^xsd:duration, (-1) * ?diff, ?diff) as ?absDiff) .
    bind ((?absDiff < "P0Y6M0DT0H0M20.000S"^^xsd:duration) as ?match) .
}

# R4 : Vérification des caractéristiques macroscopiques

!!!!!!!!!!!!!! TODO : A TESTER !!!!!!!!!!!!!!
(manque le subclassOf carac.Macro dans l'onto actuelle)

SELECT ?match
WHERE 
{
    ?s1 a :Echantillon .
    ?s2 a :Echantillon .
    ?s1 :id \"%s\" .
    ?s2 :id \"%s\" .
    
    ?p1 rdfs:subPropertyOf :caracteristiqueMacroscopique .
    BIND(datatype(?v1) as ?type1)  .
    
    ?p2 rdfs:subPropertyOf :caracteristiqueMacroscopique .
    BIND(datatype(?v2) as ?type2) .
    ?s1 ?p1 ?v1 .
    ?s2 ?p2 ?v2 .
    BIND(IF(?v1 >= ?v2, ?v1, ?v2) as ?maxValue) .
    BIND(IF(?v1 < ?v2, ?v1, ?v2) as ?minValue) .
    
    BIND ((((?type1 = xsd:string || ?type1 = xsd:boolean) && ?v1 != ?v2) || ((?type1 = xsd:decimal || ?type1 = xsd:float || ?type1 = xsd:integer) && (100.0 - (?minValue * 100.0 / ?maxValue)) > 5)) as ?match)
}

# R5 : Vérification des principes actifs.
SELECT DISTINCT ?match
WHERE
{
    {
        SELECT (COUNT(DISTINCT ?pc1) as ?countPC1) (COUNT(DISTINCT ?pc2) as ?countPC2) (COUNT(DISTINCT ?sb1) as ?countSB1) (COUNT(DISTINCT ?sb2) as ?countSB2)
        WHERE
        {
            ?s1 a :Echantillon .
            ?s1 :id \"%s\" .
            ?s1 :aPrincipeActif ?ap1 .
            ?ap1 :aSubstance ?sb1 .
            
            ?s2 a :Echantillon .
            ?s1 :id \"%s\" .
            ?s2 :aPrincipeActif ?ap2 .
            ?ap2 :aSubstance ?sb2 .
        }
    }
    {
        SELECT (COUNT(DISTINCT ?sb) as ?commonSB)
        WHERE
        {
            ?s1 a :Echantillon .
            ?s1 :id \"%s\" .
            ?s1 :aPrincipeActif ?ap1 .
            ?ap1 :aSubstance ?sb .

            ?s2 a :Echantillon .
            ?s1 :id \"%s\" .
            ?s2 :aPrincipeActif ?ap2 .
            ?ap2 :aSubstance ?sb .
        }
    }
    BIND ((?countPC1 = ?countPC2 && ?countSB1 = ?countSB2 && ?countSB1 = ?commonSB) as ?match)
}   

# R6 : Vérification du dosage des principes actifs.
PREFIX : <http://www.stups.fr/ontologies/2023/stups/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?match
WHERE 
{
    {
		SELECT (COUNT(?caracMatch) as ?countCaracNoMatch)
        WHERE 
        {
            ?s1 a :Echantillon .
            ?s2 a :Echantillon .
            ?s1 :id \"%s\" .
            ?s2 :id \"%s\" .

            ?s1 ?p1 ?v1 .
            ?s2 ?p2 ?v2 .

            ?p1 rdfs:subPropertyOf :caracteristiqueMacroscopique .
            ?p2 rdfs:subPropertyOf :caracteristiqueMacroscopique .

            FILTER(?p1 = ?p2 && ?p1 != :caracteristiqueMacroscopique && ?p2 != :caracteristiqueMacroscopique)

            BIND(datatype(?v1) as ?type1) .    
            BIND(datatype(?v2) as ?type2) .    
            BIND(IF(?v1 >= ?v2, ?v1, ?v2) as ?maxValue) .
            BIND(IF(?v1 < ?v2, ?v1, ?v2) as ?minValue) .

            BIND ((((?type1 = xsd:string || ?type1 = xsd:boolean) && ?v1 = ?v2) || ((?type1 = xsd:decimal || ?type1 = xsd:float || ?type1 = xsd:integer) && (100.0 - (?minValue * 100.0 / ?maxValue)) < 5)) as ?caracMatch)
    		FILTER(!?caracMatch)
        }
    }
    BIND ((?countCaracNoMatch = 0) as ?match)
}  

# R7 : Vérification des produits de coupage.
SELECT DISTINCT ?match
WHERE
{
    {
        # Select number of cuttingProducts and substances for each samples.
        SELECT (COUNT(DISTINCT ?pc1) as ?countPC1) (COUNT(DISTINCT ?pc2) as ?countPC2) (COUNT(DISTINCT ?sb1) as ?countSB1) (COUNT(DISTINCT ?sb2) as ?countSB2)
        WHERE
        {
            ?s1 a :Echantillon .
            ?s1 :id \"%s\" .
            ?s1 :aProduitCoupage ?pc1 .
            ?pc1 :aSubstance ?sb1 .
            
            ?s2 a :Echantillon .
            ?s2 :id \"%s\" .
            ?s2 :aProduitCoupage ?pc2 .
            ?pc2 :aSubstance ?sb2 .
        }
    }
    {
        #Select number of common substances between the two samples.
        SELECT (COUNT(DISTINCT ?sb) as ?commonSB)
        WHERE
        {
            ?s1 a :Echantillon .
            ?s1 :id \"%s\" .
            ?s1 :aProduitCoupage ?pc1 .
            ?pc1 :aSubstance ?sb .

            ?s2 a :Echantillon .
            ?s2 :id \"%s\" .
            ?s2 :aProduitCoupage ?pc2 .
            ?pc2 :aSubstance ?sb .
        }
    }
    #Check if the number of cutting products are the same for the two samples, if they have the same number of substances and if the number of common substances if equals to the number of substances.
    BIND ((?countPC1 = ?countPC2 && ?countSB1 = ?countSB2 && ?countSB1 = ?commonSB) as ?match)
}    

# R8 : Vérification du dosage des produits de coupage.
SELECT ?match
WHERE {
    {
        SELECT ?dosageMatch
        WHERE {
            ?s1 a :Echantillon .
            ?s2 a :Echantillon .
            ?s1 :id \"%s\" .
            ?s2 :id \"%s\" .
            ?s1 :aProduitCoupage ?pc1 .
            ?pc1 :aSubstance ?sb .
            ?pc1 :dosage ?d1 .
            ?s2 :aProduitCoupage ?pc2 .
            ?pc2 :aSubstance ?sb .
            ?pc2 :dosage ?d2
            BIND ((ABS(?d1 - ?d2) < 5) as ?dosageMatch)
        }
        GROUP BY ?dosageMatch
    }
    BIND ((?dosageMatch != false) as ?match)
}


# R9 : Vérification du type de drogue.
SELECT ?match
WHERE {
   ?s1 a :Echantillon .
   ?s2 a :Echantillon .
   ?s1 :id \"%s\" .
   ?s2 :id \"%s\" .
   ?s1 :typeDrogue ?dt1 .
   ?s2 :typeDrogue ?dt2 .
   BIND ((?dt1 = ?dt2) as ?match)
}